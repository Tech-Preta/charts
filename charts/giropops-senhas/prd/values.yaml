giropopsSenhas:
  enabled: true # Habilita o deploy do Giropops Senhas
  replicaCount: 3 # Número de réplicas
  serviceAccountName: giropops-senhas-sa # Nome da service account
  env:
  - name: REDIS_HOST # Nome da variável de ambiente para conexão com o Redis
    value: "redis" # Endereço do serviço do Redis

  podLabels: # Labels do pod
    app: giropops-senhas-prd-giropops-senhas # Label do pod

  podAnnotations: # Annotations do pod
    prometheus.io/scrape: "true" # Habilita o scrape do Prometheus
    prometheus.io/port: "5000" # Porta onde o Prometheus irá fazer o scrape
    prometheus.io/path: "/metrics" # Path onde o Prometheus irá fazer o scrape
    app: giropops-senhas-prd-giropops-senhas # Label do pod

  podMonitor: # Configuração do PodMonitor
    enabled: true
    namespace: kube-prometheus-stack
    namespaceSelector:
      matchNames:
      - giropops-senhas-prd
    selector:
      matchLabels:
        app: giropops-senhas-prd-giropops-senhas
    endpoints:
    - port: "http"
      path: "/metrics"
      interval: "30s"
      scrapeTimeout: "10s"
    - port: "http"
      path: "/health"
      interval: "30s"
      scrapeTimeout: "10s"

serviceMonitor: # Configuração do ServiceMonitor
  enabled: true
  giropopsSenhas:
    namespace: kube-prometheus-stack
    namespaceSelector:
      matchNames:
      - giropops-senhas-prd
    selector:
      matchLabels:
        app: giropops-senhas-prd-giropops-senhas
    endpoints:
    - port: "http"
      path: "/metrics"
      interval: "30s"
      scrapeTimeout: "10s"
    - port: "http"
      path: "/health"
      interval: "30s"
      scrapeTimeout: "10s"

image: # Configuração da imagem
  repository: nataliagranato/linuxtips-giropops-senhas
  pullPolicy: IfNotPresent
  tag: "c86af-20240813134736"

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

serviceAccount: # Configuração da service account
  create: true
  automount: true
  annotations: {}
  name: giropops-senhas-sa

  podSecurityContext: # Configuração do podSecurityContext
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    runAsUser: 1000

  securityContext: # Configuração do securityContext
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    runAsUser: 1000

service: # Configuração do serviço
  name: giropops-senhas-prd
  type: ClusterIP
  port: 5000
  targetPort: 5000
  selector:
    app: giropops-senhas-prd-giropops-senhas

ingress: # Configuração do ingress
  enabled: true
  className: nginx
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
  tls: # Configuração do TLS
  - hosts:
    - senhas-prd.nataliagranato.xyz
    secretName: senhas-prd.nataliagranato.xyz
  hosts:
  - host: senhas-prd.nataliagranato.xyz
    paths:
    - path: /
      pathType: Prefix
      backend:
        service:
          name: giropops-senhas-prd
          port:
            number: 5000

  resources: # Configuração de recursos
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi

  livenessProbe: # Configuração do livenessProbe
    httpGet:
      path: /
      port: 5000
    initialDelaySeconds: 5
    periodSeconds: 5
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1

  readinessProbe: # Configuração do readinessProbe
    httpGet:
      path: /
      port: 5000
    initialDelaySeconds: 5
    periodSeconds: 5
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1

autoscaling: # Configuração do autoscaling
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

volumes: # Configuração de volumes
  metadata:
    name: senhas-volume
    namespace: giropops-senhas-prd
    labels:
      app: giropops-senhas-prd
  spec:
    storageClassName: oci-bv
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 1Gi

redis: # Configuração do Redis
  enabled: true
  image: "nataliagranato/redis:v1.0.0"
  replicas: 1
  port: 6379
  labels:
    app: "redis"

  service:
    type: "ClusterIP"
    port: 6379
    targetPort: 6379
    name: "redis"

  resources:
    requests:
      memory: "128Mi"
      cpu: "250m"
    limits:
      memory: "256Mi"
      cpu: "500m"
